plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

    id "com.moowork.node" version "1.3.1"
}


apply plugin: "com.moowork.node"


group = 'kr.dgpark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // querydsl
    compile group: 'com.querydsl', name: 'querydsl-jpa'
    compile group: 'com.querydsl', name: 'querydsl-apt'

    // jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.12.1'

    // thymeleaf
//    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // web
    compile 'org.springframework.boot:spring-boot-starter-web'

    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'

    // query parameter log

    // telegram
    compile group: 'org.telegram', name: 'telegrambots', version: '4.5'


    // security
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    // modelmapper
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.batch:spring-batch-test'
}

test {
    useJUnitPlatform()
}


// querydsl 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl"
def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}
// querydsl 적용 종료




// react
def webappDir = "$projectDir/frontend/bot-admin"

//node {
//    version = '12.14.1'
//    download = true
//    workDir = file("${project.buildDir}/nodejs")
//    npmWorkDir= file("${project.buildDir}/npm")
//}

task appNpmInstall(type: NpmTask) {
    workingDir = file("${webappDir}")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'frontend/bot-admin/build'
    into "build/resources/main/static"
//    into "src/main/resources/static"
}

copyWebApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyWebApp)

